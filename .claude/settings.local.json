{
  "permissions": {
    "allow": [
      "Bash(cargo build:*)",
      "Bash(cargo test:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Read(///**)",
      "Bash(cat:*)",
      "Bash(awk:*)",
      "Bash(mkdir:*)",
      "Read(//tmp/**)",
      "Bash(bash)",
      "Bash(cargo clean:*)",
      "Bash(for:*)",
      "Bash(do echo \"=== Game $i ===\")",
      "Bash(tail:*)",
      "Bash(python3:*)",
      "Bash(done)",
      "Bash(do echo \"Game $i:\")",
      "Bash(cargo run:*)",
      "Bash(sort:*)",
      "Bash(do echo \"=== $game ===\")",
      "Bash(git commit:*)",
      "Bash(wc:*)",
      "Bash(do echo \"=== Game $game ===\" tail -4 tests/fixtures/1v1_self/game_$game.jsonl)",
      "Bash(grep -o '\"\"\"\"chosen_move\"\"\"\":\"\"\"\"[^\"\"\"\"]*\"\"\"\"' tail -2 tests/fixtures/1v1_self/game_$game.jsonl)",
      "Bash(do echo \"=== Game $game ===\")",
      "Bash(do file=\"tests/fixtures/1v1_self/game_$i.jsonl\" echo -n \"Game $i: \" tail -1 \"$file\")",
      "Bash(./target/release/validate_moves:*)",
      "Bash(chmod:*)",
      "Bash(/home/runner/workspace/analyze_replay_fix.sh)",
      "Bash(./target/release/replay:*)",
      "Bash(/home/runner/workspace/comprehensive_replay_analysis.sh)",
      "Bash(__NEW_LINE__ echo \"===== GAME 01 ANALYSIS =====\" echo \"\" echo \"Illegal moves (from validation):\" ./target/release/validate_moves tests/fixtures/1v1_self/)",
      "Bash(grep \"turn\" echo \"\" echo \"Replay mismatches (with fixed code):\" ./target/release/replay tests/fixtures/1v1_self/game_01.jsonl --all)",
      "Bash(./target/release/analyze_fix:*)",
      "Bash(wait)",
      "Bash(./target/release/regenerate_logs:*)",
      "Bash(./target/release/analyze_performance:*)",
      "Bash(./target/release/analyze_timing:*)",
      "Bash(./target/release/find_timeouts tests/fixtures/1v1_self/)",
      "Bash(pgrep:*)",
      "Bash(timeout 30 tail:*)",
      "Bash(./target/release/analyze_deaths:*)",
      "Bash(git restore:*)",
      "Bash(./target/release/split_games:*)",
      "Bash(./target/release/analyze_battle_royale:*)",
      "Bash(./target/release/find_timeouts tests/fixtures/battle_royale_florence/ 400)",
      "Bash(jq -r '.turn' tests/fixtures/battle_royale_florence/game_01.jsonl)",
      "Bash(./target/release/analyze_replay_performance:*)",
      "Bash(RUST_LOG=info ./target/release/replay:*)",
      "Bash(./target/release/tune_branching_factor:*)",
      "Bash(./target/release/find_slow_turns:*)",
      "Bash(BATTLESNAKE_PROFILE=1 timeout 60 ./target/release/profile_slow_turns:*)",
      "Bash(BATTLESNAKE_PROFILE=1 timeout 90 ./target/release/profile_slow_turns:*)",
      "Bash(BATTLESNAKE_PROFILE=1 ./target/release/profile_slow_turns:*)",
      "Bash(RUST_LOG=info BATTLESNAKE_PROFILE=1 ./target/release/profile_slow_turns:*)",
      "Bash(nm:*)",
      "Read(//dev/shm/**)",
      "Bash(timeout 120 sh:*)",
      "Bash(./target/release/profile_slow_turns:*)",
      "Bash(timeout 180 sh:*)",
      "Bash(pkill:*)",
      "Bash(./target/release/find_timeouts:*)",
      "Bash(./target/release/analyze_trap_decisions:*)",
      "Bash(./target/release/diagnose_illegal_moves:*)",
      "Bash(do echo \"═══════════════════════════════════════════════════════════\")",
      "Bash(jq:*)",
      "Bash(do grep \"\"\"turn\"\":$turn,\" tests/fixtures/learning_suite/game_03.jsonl)",
      "Bash(paste:*)",
      "Bash(./target/release/tune_head_collision_penalty:*)",
      "Bash(do echo \"═══════════════════════════════════════════════════════════\" echo \"Replaying: $game\" echo \"═══════════════════════════════════════════════════════════\" ./target/release/replay \"$game\" --all)"
    ],
    "deny": [],
    "ask": []
  }
}
